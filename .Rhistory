dir()
"options(device="quartz")"
options(device="quartz")
dir()
ls9)
ls()
rm(a)
ls()
q()
ls()
dir()
q()
dir()
q()
n
ls()
q()
n
ls
dir
quartz()
kill()
>
a <- 2
a
q()
n]
ls()
dir()
a <- c(0:10)
a
plot(a)
library(animation)
demo('fire')
q()
dir()
l
system("uptime")
system(uptime)
a <- system("whoami")
a
a <- as.string(system("whoami"))
string
as.string
as.str
as.char
as.character
as.character("a")
rm(a)
a <- as.character(system("whoami"))
a
a
a=1
a
a=0
a
rm(a)
1=a
a=1
a
rm(a)
q())
a()
q()
n
dir()
install.packages("plotrix")
install.packages("plotrix")
library(plotrix)
?gantt.chart
Ymd.format<-"%Y/%m/%d"
gantt.info<-list(labels=
c("First task","Second task","Third task","Fourth task","Fifth task"),
starts=
as.POSIXct(strptime(
c("2004/01/01","2004/02/02","2004/03/03","2004/05/05","2004/09/09"),
format=Ymd.format)),
ends=
as.POSIXct(strptime(
c("2004/03/03","2004/05/05","2004/05/05","2004/08/08","2004/12/12"),
format=Ymd.format)),
priorities=c(1,2,3,4,5))
vgridpos<-as.POSIXct(strptime(c("2004/01/01","2004/02/01","2004/03/01",
"2004/04/01","2004/05/01","2004/06/01","2004/07/01","2004/08/01",
"2004/09/01","2004/10/01","2004/11/01","2004/12/01"),format=Ymd.format))
vgridlab<-
c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
gantt.chart(gantt.info,main="Calendar date Gantt chart (2004)",
priority.legend=TRUE,vgridpos=vgridpos,vgridlab=vgridlab,hgrid=TRUE)
# if both vgidpos and vgridlab are specified,
# starts and ends don't have to be dates
info2<-list(labels=c("Jim","Joe","Jim","John","John","Jake","Joe","Jed","Jake"),
starts=c(8.1,8.7,13.0,9.1,11.6,9.0,13.6,9.3,14.2),
ends=c(12.5,12.7,16.5,10.3,15.6,11.7,18.1,18.2,19.0))
gantt.chart(info2,vgridlab=8:19,vgridpos=8:19,
main="All bars the same color",taskcolors="lightgray")
gantt.chart(info2,vgridlab=8:19,vgridpos=8:19,
main="A color for each label",taskcolors=c(2,3,7,4,8))
gantt.chart(info2,vgridlab=8:19,vgridpos=8:19,
main="A color for each interval - with borders",
taskcolors=c(2,3,7,4,8,5,3,6,"purple"),border.col="black")
q()
n
dir()
ls()
q()
n
dir()
ls()
rm(a)
require(pryr)
licence(
)
citation()
citation("base")
source('~/git/CareCascade/script/Run.R', echo=TRUE)
plot(Baseline$sINCIDENCE,type='l',lwd=2)
plot(Baseline$sHIV_15to49 / Baseline$sPOP_15to49,type='l',lwd=2)
Prev <- Baseline$sHIV_15to49 / Baseline$sPOP_15to49
Inc <- Baseline$sINCIDENCE
Scenario <- "Baseline"
length(Prev)
length(Inc)
Year <- seq(1970,2036,1)
source('~/git/CareCascade/script/Run.R', echo=TRUE)
Output <- data.frame(Year,Prev,Inc)
length(Year)
Year <- seq(1970,2035,1)
Output <- data.frame(Year,Prev,Inc)
length(Inc)
source('~/git/CareCascade/script/Run.R', echo=TRUE)
source('~/git/CareCascade/script/Run.R', echo=TRUE)
Prev <- Baseline$sHIV_15to49 / Baseline$sPOP_15to49
Year <- seq(1970,2035,1)
Year <- seq(1970,2035,1)
Scenario <- "Baseline"
length(Year)
Output <- data.frame(Year,Prev,Inc)
Output
require(ggplot2)
ggplot(Output,aes(x=Year,y=Prev)) + geom_point()
ggplot(Output,aes(x=Year,y=Inc)) + geom_point()
ggplot(Output,aes(x=Year,y=Prev)) + geom_line()
require(lineprof)
lineprof()
lineprof(.Call("CallCascade",popSize, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
prof <- lineprof(.Call("CallCascade",popSize, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
prof
View(prof)
shine()
shine(prof)
